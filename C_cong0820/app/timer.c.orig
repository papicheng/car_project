
#include "timer.h"
#include "camera.h"

uint8 errleft[2], errright[2];
extern uint8 NOpoint;
extern uint8 real_pointx, real_pointy;

void pit_init( void )
{
    static PIT_InitTypeDef pit0_init_struct;
    pit0_init_struct.PIT_Pitx = PIT0;
    pit0_init_struct.PIT_PeriodMs = 10;    //计算时间会到2ms，
    pit0_init_struct.PIT_Isr = pit0_isr;   //设置中断函数
    LPLD_PIT_Init( pit0_init_struct );
    LPLD_PIT_EnableIrq( pit0_init_struct );
}

void pit0_isr( void )
{
    Calculate_Middle_Point();
    //if(NOpoint==0&&real_pointy>51&&45<real_pointx&&real_pointx<130)
    /*-----------------小打脚-----------------------*/
    if( NOpoint == 0 && 40 < real_pointx && real_pointx < 130 && real_pointy >= 4 && real_pointy < 30 && errleft[0] ==0 && errright[0]==0 )
    {
        //单纯主从引脚连接E26-AA16  E27-AA17 E28-AA18 A4-AA19 A5-AA12 A7-AA13可触发中断
        if( real_pointx < 80 ) //障碍在左
        {
            PTA16_O = 1;  //A16输出高电平 ，与主单片机E26相连
            PTA17_O = 0; 
            PTA12_O = 0;
            PTA13_O = 0;
            errleft[0] = 1;
            //LPLD_PIT_EnableIrq(pit1_init_struct);
        }
        else//障碍在右
        {
            PTA16_O = 0;
            PTA17_O = 1;//A17输出高电平 ，与主单片机E27相连
            PTA12_O = 0;
            PTA13_O = 0;
            errright[0] = 1;
            //LPLD_PIT_EnableIrq(pit1_init_struct);
        }
    }
    /*---------------------大打脚------------------------------*/
    else if( NOpoint == 0 && real_pointy >= 30 && 18 <= real_pointx && real_pointx <= 145 && errleft[1] ==0 && errright[1]==0 ) //pointy在55左右障碍点仍有效
    {
        if( real_pointx < 80 ) //障碍在左
        {
            PTA16_O = 0;
            PTA17_O = 0;//A17输出高电平 ，与主单片机E27相连
            PTA12_O = 1;
            PTA13_O = 0;
            errleft[1] = 1;
        }
        else//障碍在右
        {
            PTA16_O = 0;
            PTA17_O = 0;//A17输出高电平 ，与主单片机E27相连
            PTA12_O = 0;
            PTA13_O = 1;
            errright[1] = 1;
        }
    }

    if(errleft[0]==1&&NOpoint==1)
      {
        PTA16_O =0;//避障后看不到图，恢复低电平
        //disable_irq(PIT1_IRQn);
        errleft[0]=0;
      }
    if(errright[0]==1&&NOpoint==1)
      {
        PTA17_O =0;//避障后看不到图，恢复低电平
        //disable_irq(PIT1_IRQn);
        errright[0]=0;
      }
    if(errleft[1]==1&&NOpoint==1)
    {
      PTA12_O =0;
      errleft[1]=0;
    }
    if(errright[1]==1&&NOpoint==1)
    {
      PTA13_O =0;
      errright[1]=0;
    }
    }/*
    void pit1_isr(void) //避障结束，电平恢复
    {
    if(errleft==1&&Nopoint==1)
    {
      PTA16_O =0;//避障后看不到图，回复低电平
      disable_irq(PIT1_IRQn);
      errleft=0;
    }
    if(errright==1&&Nopoint==1)
    {
      PTA17_O =0;//避障后看不到图，回复低电平
      disable_irq(PIT1_IRQn);
      errright=0;
    }
    }*/
    void Key_delay( void )
    {
        uint16 i, n;
        for( i = 0; i < 19000; i++ )
        {
            for( n = 0; n < 50; n++ )
            {
                asm( "nop" );
            }
        }
    }