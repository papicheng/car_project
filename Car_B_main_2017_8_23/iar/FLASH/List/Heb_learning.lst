###############################################################################
#
# IAR ANSI C/C++ Compiler V7.50.1.10123/W32 for ARM       23/Aug/2017  10:34:56
# Copyright 1999-2015 IAR Systems AB.
#
#    Cpu mode     =  thumb
#    Endian       =  little
#    Source file  =  
#        G:\study\car\program\lib_and_example\LPLD_OSKinetis_V3\project\Car_B_main_2017_8_23\app\Heb_learning.c
#    Command line =  
#        G:\study\car\program\lib_and_example\LPLD_OSKinetis_V3\project\Car_B_main_2017_8_23\app\Heb_learning.c
#        -D LPLD_K60 -D USE_K60DZ10 -lCN
#        G:\study\car\program\lib_and_example\LPLD_OSKinetis_V3\project\Car_B_main_2017_8_23\iar\FLASH\List
#        -lB
#        G:\study\car\program\lib_and_example\LPLD_OSKinetis_V3\project\Car_B_main_2017_8_23\iar\FLASH\List
#        -o
#        G:\study\car\program\lib_and_example\LPLD_OSKinetis_V3\project\Car_B_main_2017_8_23\iar\FLASH\Obj
#        --no_cse --no_unroll --no_inline --no_code_motion --no_tbaa
#        --no_clustering --no_scheduling --debug --endian=little
#        --cpu=Cortex-M4 -e --fpu=None --dlib_config "E:\IAR Systems\Embedded
#        Workbench 7.3\arm\INC\c\DLib_Config_Normal.h" -I
#        G:\study\car\program\lib_and_example\LPLD_OSKinetis_V3\project\Car_B_main_2017_8_23\iar\..\app\
#        -I
#        G:\study\car\program\lib_and_example\LPLD_OSKinetis_V3\project\Car_B_main_2017_8_23\iar\..\..\..\lib\CPU\
#        -I
#        G:\study\car\program\lib_and_example\LPLD_OSKinetis_V3\project\Car_B_main_2017_8_23\iar\..\..\..\lib\common\
#        -I
#        G:\study\car\program\lib_and_example\LPLD_OSKinetis_V3\project\Car_B_main_2017_8_23\iar\..\..\..\lib\LPLD\
#        -I
#        G:\study\car\program\lib_and_example\LPLD_OSKinetis_V3\project\Car_B_main_2017_8_23\iar\..\..\..\lib\LPLD\HW\
#        -I
#        G:\study\car\program\lib_and_example\LPLD_OSKinetis_V3\project\Car_B_main_2017_8_23\iar\..\..\..\lib\LPLD\DEV\
#        -I
#        G:\study\car\program\lib_and_example\LPLD_OSKinetis_V3\project\Car_B_main_2017_8_23\iar\..\..\..\lib\LPLD\FUNC\
#        -I
#        G:\study\car\program\lib_and_example\LPLD_OSKinetis_V3\project\Car_B_main_2017_8_23\iar\..\..\..\lib\uCOS-II\Ports\
#        -I
#        G:\study\car\program\lib_and_example\LPLD_OSKinetis_V3\project\Car_B_main_2017_8_23\iar\..\..\..\lib\uCOS-II\Source\
#        -I
#        G:\study\car\program\lib_and_example\LPLD_OSKinetis_V3\project\Car_B_main_2017_8_23\iar\..\..\..\lib\FatFs\
#        -I
#        G:\study\car\program\lib_and_example\LPLD_OSKinetis_V3\project\Car_B_main_2017_8_23\iar\..\..\..\lib\FatFs\option\
#        -I
#        G:\study\car\program\lib_and_example\LPLD_OSKinetis_V3\project\Car_B_main_2017_8_23\iar\..\..\..\lib\USB\common\
#        -I
#        G:\study\car\program\lib_and_example\LPLD_OSKinetis_V3\project\Car_B_main_2017_8_23\iar\..\..\..\lib\USB\driver\
#        -I
#        G:\study\car\program\lib_and_example\LPLD_OSKinetis_V3\project\Car_B_main_2017_8_23\iar\..\..\..\lib\USB\descriptor\
#        -I
#        G:\study\car\program\lib_and_example\LPLD_OSKinetis_V3\project\Car_B_main_2017_8_23\iar\..\..\..\lib\USB\class\
#        -Ol -I "E:\IAR Systems\Embedded Workbench 7.3\arm\CMSIS\Include\" -D
#        ARM_MATH_CM4
#    List file    =  
#        G:\study\car\program\lib_and_example\LPLD_OSKinetis_V3\project\Car_B_main_2017_8_23\iar\FLASH\List\Heb_learning.lst
#    Object file  =  
#        G:\study\car\program\lib_and_example\LPLD_OSKinetis_V3\project\Car_B_main_2017_8_23\iar\FLASH\Obj\Heb_learning.o
#
###############################################################################

G:\study\car\program\lib_and_example\LPLD_OSKinetis_V3\project\Car_B_main_2017_8_23\app\Heb_learning.c
      1          
      2          #include "Heb_learning.h"
      3          #include "math.h"
      4          #include "timer.h"
      5          
      6          ////本Heb 学习算法使用的是增量式PID.
      7          //  Control_Param X;
      8          //
      9          //  float xite_P;
     10          //  float xite_I;
     11          //  float xite_D;
     12          //
     13          //  //Initilizing kp,ki an kd
     14          //  float wkp_1;
     15          //  float wki_1;
     16          //  float wkd_1;
     17          //
     18          //  float wkp_Now;
     19          //  float wki_Now;
     20          //  float wkd_Now;
     21          //
     22          //  float error_1;
     23          //  float error_2;
     24          //
     25          //  float u_1;
     26          //  

   \                                 In section .data, align 4
     27          Node_Struct Left_Mortor={
   \                     Left_Mortor:
   \   00000000   0x00000000         DC32 0H, 0H, 0H, 40600000H, 40000000H, 3E99999AH, 3F800000H, 3F800000H
   \              0x00000000   
   \              0x00000000   
   \              0x40600000   
   \              0x40000000   
   \              0x3E99999A   
   \              0x3F800000   
   \              0x3F800000   
   \   00000020   0x3F800000         DC32 3F800000H, 3FC66666H, 3F800000H, 3F800000H, 0H, 0H, 0H, 0H, 0H, 0H
   \              0x3FC66666   
   \              0x3F800000   
   \              0x3F800000   
   \              0x00000000   
   \              0x00000000   
   \              0x00000000   
   \              0x00000000   
   \              0x00000000   
   \              0x00000000   
     28            {0,0,0},
     29          
     30            3.5,
     31            2,
     32            0.3,
     33            
     34            //MIN kp,ki an kd
     35            1,
     36            1,
     37            1,
     38            
     39            //Initilizing kp,ki an kd
     40            1.55,
     41            1,
     42            1,
     43          
     44            0,
     45            0,
     46            0,
     47          
     48            0,
     49            0,
     50          
     51            0,
     52          };

   \                                 In section .data, align 4
     53          Node_Struct Right_Mortor={
   \                     Right_Mortor:
   \   00000000   0x00000000         DC32 0H, 0H, 0H, 40600000H, 40000000H, 3E99999AH, 3F800000H, 3F800000H
   \              0x00000000   
   \              0x00000000   
   \              0x40600000   
   \              0x40000000   
   \              0x3E99999A   
   \              0x3F800000   
   \              0x3F800000   
   \   00000020   0x3F800000         DC32 3F800000H, 3FC66666H, 3F800000H, 3F800000H, 0H, 0H, 0H, 0H, 0H, 0H
   \              0x3FC66666   
   \              0x3F800000   
   \              0x3F800000   
   \              0x00000000   
   \              0x00000000   
   \              0x00000000   
   \              0x00000000   
   \              0x00000000   
   \              0x00000000   
     54            //本Heb 学习算法使用的是增量式PID.
     55            {0,0,0},
     56          
     57            3.5,
     58            2,
     59            0.3,
     60          
     61            //MIN kp,ki an kd
     62            1,
     63            1,
     64            1,
     65            
     66            //Initilizing kp,ki an kd
     67            1.55,
     68            1,
     69            1,
     70          
     71            0,
     72            0,
     73            0,
     74          
     75            0,
     76            0,
     77            0,
     78          };
     79          

   \                                 In section .data, align 4
     80          Node_Struct Speed_Struct={
   \                     Speed_Struct:
   \   00000000   0x00000000         DC32 0H, 0H, 0H, 40600000H, 40000000H, 3E99999AH, 3F800000H, 3F800000H
   \              0x00000000   
   \              0x00000000   
   \              0x40600000   
   \              0x40000000   
   \              0x3E99999A   
   \              0x3F800000   
   \              0x3F800000   
   \   00000020   0x3F800000         DC32 3F800000H, 3FC66666H, 3F800000H, 41200000H, 0H, 0H, 0H, 0H, 0H, 0H
   \              0x3FC66666   
   \              0x3F800000   
   \              0x41200000   
   \              0x00000000   
   \              0x00000000   
   \              0x00000000   
   \              0x00000000   
   \              0x00000000   
   \              0x00000000   
     81            //本Heb 学习算法使用的是增量式PID.
     82            {0,0,0},
     83          
     84            3.5,
     85            2,
     86            0.3,
     87          
     88            //MIN kp,ki an kd
     89            1,
     90            1,
     91            1,
     92            
     93            //Initilizing kp,ki an kd
     94            1.55,
     95            1,
     96            10,
     97          
     98            0,
     99            0,
    100            0,
    101          
    102            0,
    103            0,
    104            0,
    105          };
    106          
    107          /*
    108          **********Heb 单神经元学习算法***************8
    109          ****parameter：
    110          Set_Target:设定的目标值
    111          InValue_Now:当前目标的状态。
    112          USE_TYPE:使用学习算法类型。
    113          Act_Time:算法的响应时间。非常重要，需要仔细调节
    114          //返回控制量
    115          */

   \                                 In section .text, align 4, keep-with-next
    116          float Heb_learning_Function(Node_Struct* Nude_X,float Set_Target,float InValue_Now,int USE_TYPE,float Act_Time)
    117          {
   \                     Heb_learning_Function: (+1)
   \   00000000   0xE92D 0x4FF8      PUSH     {R3-R11,LR}
   \   00000004   0x0006             MOVS     R6,R0
   \   00000006   0x001C             MOVS     R4,R3
    118            int M=3;//默认使用第3算法
   \   00000008   0x2503             MOVS     R5,#+3
    119            float K=Act_Time;
   \   0000000A   0xF8DD 0x8028      LDR      R8,[SP, #+40]
    120            float error_Now=0,u_Now=0;
   \   0000000E   0x2700             MOVS     R7,#+0
   \   00000010   0x2000             MOVS     R0,#+0
    121            float w11=0,w22=0,w33=0,wadd=1;
   \   00000012   0xF05F 0x0900      MOVS     R9,#+0
   \   00000016   0xF05F 0x0A00      MOVS     R10,#+0
   \   0000001A   0xF05F 0x0B00      MOVS     R11,#+0
   \   0000001E   0xF05F 0x5B7E      MOVS     R11,#+1065353216
    122            
    123            error_Now=Set_Target-InValue_Now;
   \   00000022   0x0008             MOVS     R0,R1
   \   00000024   0x0011             MOVS     R1,R2
   \   00000026   0x.... 0x....      BL       __aeabi_fsub
   \   0000002A   0x0007             MOVS     R7,R0
    124            
    125            //%Adjusting Weight Value by Heb learning algrithm
    126            if(USE_TYPE!=M && USE_TYPE<=4 && USE_TYPE>=1)//判断是否更改使用的算法类型
   \   0000002C   0x42AC             CMP      R4,R5
   \   0000002E   0xD003             BEQ.N    ??Heb_learning_Function_0
   \   00000030   0x1E60             SUBS     R0,R4,#+1
   \   00000032   0x2804             CMP      R0,#+4
   \   00000034   0xD200             BCS.N    ??Heb_learning_Function_0
    127            {
    128              M=USE_TYPE;
   \   00000036   0x0025             MOVS     R5,R4
    129            }
    130            if(M==1)//   %No Supervised Heb learning algorithm
   \                     ??Heb_learning_Function_0: (+1)
   \   00000038   0x2D01             CMP      R5,#+1
   \   0000003A   0xD121             BNE.N    ??Heb_learning_Function_1
    131            {
    132              Nude_X->wkp_Now=Nude_X->wkp_1+Nude_X->xite_P*Nude_X->u_1*Nude_X->X.P_Cacul_Param;  //%P
   \   0000003C   0x68F1             LDR      R1,[R6, #+12]
   \   0000003E   0x6C70             LDR      R0,[R6, #+68]
   \   00000040   0x.... 0x....      BL       __aeabi_fmul
   \   00000044   0x6831             LDR      R1,[R6, #+0]
   \   00000046   0x.... 0x....      BL       __aeabi_fmul
   \   0000004A   0x6A71             LDR      R1,[R6, #+36]
   \   0000004C   0x.... 0x....      BL       __aeabi_fadd
   \   00000050   0x6330             STR      R0,[R6, #+48]
    133              Nude_X->wki_Now=Nude_X->wki_1+Nude_X->xite_I*Nude_X->u_1*Nude_X->X.I_Cacul_Param; // %I
   \   00000052   0x6931             LDR      R1,[R6, #+16]
   \   00000054   0x6C70             LDR      R0,[R6, #+68]
   \   00000056   0x.... 0x....      BL       __aeabi_fmul
   \   0000005A   0x6871             LDR      R1,[R6, #+4]
   \   0000005C   0x.... 0x....      BL       __aeabi_fmul
   \   00000060   0x6AB1             LDR      R1,[R6, #+40]
   \   00000062   0x.... 0x....      BL       __aeabi_fadd
   \   00000066   0x6370             STR      R0,[R6, #+52]
    134              Nude_X->wkd_Now=Nude_X->wkd_1+Nude_X->xite_D*Nude_X->u_1*Nude_X->X.D_Cacul_Param; // %D
   \   00000068   0x6971             LDR      R1,[R6, #+20]
   \   0000006A   0x6C70             LDR      R0,[R6, #+68]
   \   0000006C   0x.... 0x....      BL       __aeabi_fmul
   \   00000070   0x68B1             LDR      R1,[R6, #+8]
   \   00000072   0x.... 0x....      BL       __aeabi_fmul
   \   00000076   0x6AF1             LDR      R1,[R6, #+44]
   \   00000078   0x.... 0x....      BL       __aeabi_fadd
   \   0000007C   0x63B0             STR      R0,[R6, #+56]
   \   0000007E   0xE097             B.N      ??Heb_learning_Function_2
    135            }
    136            else if(M==2)// %Supervised Dolta learing algorithm
   \                     ??Heb_learning_Function_1: (+1)
   \   00000080   0x2D02             CMP      R5,#+2
   \   00000082   0xD121             BNE.N    ??Heb_learning_Function_3
    137            {
    138              Nude_X->wkp_Now=Nude_X->wkp_1+Nude_X->xite_P*error_Now*Nude_X->u_1;  //%P
   \   00000084   0x68F0             LDR      R0,[R6, #+12]
   \   00000086   0x0039             MOVS     R1,R7
   \   00000088   0x.... 0x....      BL       __aeabi_fmul
   \   0000008C   0x6C71             LDR      R1,[R6, #+68]
   \   0000008E   0x.... 0x....      BL       __aeabi_fmul
   \   00000092   0x6A71             LDR      R1,[R6, #+36]
   \   00000094   0x.... 0x....      BL       __aeabi_fadd
   \   00000098   0x6330             STR      R0,[R6, #+48]
    139              Nude_X->wki_Now=Nude_X->wki_1+Nude_X->xite_I*error_Now*Nude_X->u_1;  //%I
   \   0000009A   0x6930             LDR      R0,[R6, #+16]
   \   0000009C   0x0039             MOVS     R1,R7
   \   0000009E   0x.... 0x....      BL       __aeabi_fmul
   \   000000A2   0x6C71             LDR      R1,[R6, #+68]
   \   000000A4   0x.... 0x....      BL       __aeabi_fmul
   \   000000A8   0x6AB1             LDR      R1,[R6, #+40]
   \   000000AA   0x.... 0x....      BL       __aeabi_fadd
   \   000000AE   0x6370             STR      R0,[R6, #+52]
    140              Nude_X->wkd_Now=Nude_X->wkd_1+Nude_X->xite_D*error_Now*Nude_X->u_1;  //%D
   \   000000B0   0x6970             LDR      R0,[R6, #+20]
   \   000000B2   0x0039             MOVS     R1,R7
   \   000000B4   0x.... 0x....      BL       __aeabi_fmul
   \   000000B8   0x6C71             LDR      R1,[R6, #+68]
   \   000000BA   0x.... 0x....      BL       __aeabi_fmul
   \   000000BE   0x6AF1             LDR      R1,[R6, #+44]
   \   000000C0   0x.... 0x....      BL       __aeabi_fadd
   \   000000C4   0x63B0             STR      R0,[R6, #+56]
   \   000000C6   0xE073             B.N      ??Heb_learning_Function_2
    141            }
    142            else if(M==3)// %Supervised Heb learning algorithm
   \                     ??Heb_learning_Function_3: (+1)
   \   000000C8   0x2D03             CMP      R5,#+3
   \   000000CA   0xD12A             BNE.N    ??Heb_learning_Function_4
    143            {
    144              Nude_X->wkp_Now=Nude_X->wkp_1+Nude_X->xite_P*error_Now*Nude_X->u_1*Nude_X->X.P_Cacul_Param;  //%P
   \   000000CC   0x68F0             LDR      R0,[R6, #+12]
   \   000000CE   0x0039             MOVS     R1,R7
   \   000000D0   0x.... 0x....      BL       __aeabi_fmul
   \   000000D4   0x6C71             LDR      R1,[R6, #+68]
   \   000000D6   0x.... 0x....      BL       __aeabi_fmul
   \   000000DA   0x6831             LDR      R1,[R6, #+0]
   \   000000DC   0x.... 0x....      BL       __aeabi_fmul
   \   000000E0   0x6A71             LDR      R1,[R6, #+36]
   \   000000E2   0x.... 0x....      BL       __aeabi_fadd
   \   000000E6   0x6330             STR      R0,[R6, #+48]
    145              Nude_X->wki_Now=Nude_X->wki_1+Nude_X->xite_I*error_Now*Nude_X->u_1*Nude_X->X.I_Cacul_Param;  //%I
   \   000000E8   0x6930             LDR      R0,[R6, #+16]
   \   000000EA   0x0039             MOVS     R1,R7
   \   000000EC   0x.... 0x....      BL       __aeabi_fmul
   \   000000F0   0x6C71             LDR      R1,[R6, #+68]
   \   000000F2   0x.... 0x....      BL       __aeabi_fmul
   \   000000F6   0x6871             LDR      R1,[R6, #+4]
   \   000000F8   0x.... 0x....      BL       __aeabi_fmul
   \   000000FC   0x6AB1             LDR      R1,[R6, #+40]
   \   000000FE   0x.... 0x....      BL       __aeabi_fadd
   \   00000102   0x6370             STR      R0,[R6, #+52]
    146              Nude_X->wkd_Now=Nude_X->wkd_1+Nude_X->xite_D*error_Now*Nude_X->u_1*Nude_X->X.D_Cacul_Param;  //%D
   \   00000104   0x6970             LDR      R0,[R6, #+20]
   \   00000106   0x0039             MOVS     R1,R7
   \   00000108   0x.... 0x....      BL       __aeabi_fmul
   \   0000010C   0x6C71             LDR      R1,[R6, #+68]
   \   0000010E   0x.... 0x....      BL       __aeabi_fmul
   \   00000112   0x68B1             LDR      R1,[R6, #+8]
   \   00000114   0x.... 0x....      BL       __aeabi_fmul
   \   00000118   0x6AF1             LDR      R1,[R6, #+44]
   \   0000011A   0x.... 0x....      BL       __aeabi_fadd
   \   0000011E   0x63B0             STR      R0,[R6, #+56]
   \   00000120   0xE046             B.N      ??Heb_learning_Function_2
    147            }
    148            else if(M==4)//Improved Heb learning algorithm
   \                     ??Heb_learning_Function_4: (+1)
   \   00000122   0x2D04             CMP      R5,#+4
   \   00000124   0xD144             BNE.N    ??Heb_learning_Function_2
    149            {
    150              Nude_X->wkp_Now=Nude_X->wkp_1+Nude_X->xite_P*error_Now*Nude_X->u_1*(2*error_Now-Nude_X->error_1);  //%P
   \   00000126   0x68F0             LDR      R0,[R6, #+12]
   \   00000128   0x0039             MOVS     R1,R7
   \   0000012A   0x.... 0x....      BL       __aeabi_fmul
   \   0000012E   0x6C71             LDR      R1,[R6, #+68]
   \   00000130   0x.... 0x....      BL       __aeabi_fmul
   \   00000134   0x0004             MOVS     R4,R0
   \   00000136   0xF05F 0x4080      MOVS     R0,#+1073741824
   \   0000013A   0x0039             MOVS     R1,R7
   \   0000013C   0x.... 0x....      BL       __aeabi_fmul
   \   00000140   0x6BF1             LDR      R1,[R6, #+60]
   \   00000142   0x.... 0x....      BL       __aeabi_fsub
   \   00000146   0x0021             MOVS     R1,R4
   \   00000148   0x.... 0x....      BL       __aeabi_fmul
   \   0000014C   0x6A71             LDR      R1,[R6, #+36]
   \   0000014E   0x.... 0x....      BL       __aeabi_fadd
   \   00000152   0x6330             STR      R0,[R6, #+48]
    151              Nude_X->wki_Now=Nude_X->wki_1+Nude_X->xite_I*error_Now*Nude_X->u_1*(2*error_Now-Nude_X->error_1);  //%I
   \   00000154   0x6930             LDR      R0,[R6, #+16]
   \   00000156   0x0039             MOVS     R1,R7
   \   00000158   0x.... 0x....      BL       __aeabi_fmul
   \   0000015C   0x6C71             LDR      R1,[R6, #+68]
   \   0000015E   0x.... 0x....      BL       __aeabi_fmul
   \   00000162   0x0004             MOVS     R4,R0
   \   00000164   0xF05F 0x4080      MOVS     R0,#+1073741824
   \   00000168   0x0039             MOVS     R1,R7
   \   0000016A   0x.... 0x....      BL       __aeabi_fmul
   \   0000016E   0x6BF1             LDR      R1,[R6, #+60]
   \   00000170   0x.... 0x....      BL       __aeabi_fsub
   \   00000174   0x0021             MOVS     R1,R4
   \   00000176   0x.... 0x....      BL       __aeabi_fmul
   \   0000017A   0x6AB1             LDR      R1,[R6, #+40]
   \   0000017C   0x.... 0x....      BL       __aeabi_fadd
   \   00000180   0x6370             STR      R0,[R6, #+52]
    152              Nude_X->wkd_Now=Nude_X->wkd_1+Nude_X->xite_D*error_Now*Nude_X->u_1*(2*error_Now-Nude_X->error_1);  //%D
   \   00000182   0x6970             LDR      R0,[R6, #+20]
   \   00000184   0x0039             MOVS     R1,R7
   \   00000186   0x.... 0x....      BL       __aeabi_fmul
   \   0000018A   0x6C71             LDR      R1,[R6, #+68]
   \   0000018C   0x.... 0x....      BL       __aeabi_fmul
   \   00000190   0x0004             MOVS     R4,R0
   \   00000192   0xF05F 0x4080      MOVS     R0,#+1073741824
   \   00000196   0x0039             MOVS     R1,R7
   \   00000198   0x.... 0x....      BL       __aeabi_fmul
   \   0000019C   0x6BF1             LDR      R1,[R6, #+60]
   \   0000019E   0x.... 0x....      BL       __aeabi_fsub
   \   000001A2   0x0021             MOVS     R1,R4
   \   000001A4   0x.... 0x....      BL       __aeabi_fmul
   \   000001A8   0x6AF1             LDR      R1,[R6, #+44]
   \   000001AA   0x.... 0x....      BL       __aeabi_fadd
   \   000001AE   0x63B0             STR      R0,[R6, #+56]
    153            }
    154            
    155            Nude_X->wkp_Now=((Nude_X->wkp_Now<Nude_X->wkp_min)?Nude_X->wkp_min:Nude_X->wkp_Now);
   \                     ??Heb_learning_Function_2: (+1)
   \   000001B0   0x6B30             LDR      R0,[R6, #+48]
   \   000001B2   0x69B1             LDR      R1,[R6, #+24]
   \   000001B4   0x.... 0x....      BL       __aeabi_cfcmple
   \   000001B8   0xD201             BCS.N    ??Heb_learning_Function_5
   \   000001BA   0x69B0             LDR      R0,[R6, #+24]
   \   000001BC   0xE000             B.N      ??Heb_learning_Function_6
   \                     ??Heb_learning_Function_5: (+1)
   \   000001BE   0x6B30             LDR      R0,[R6, #+48]
   \                     ??Heb_learning_Function_6: (+1)
   \   000001C0   0x6330             STR      R0,[R6, #+48]
    156            Nude_X->wki_Now=((Nude_X->wki_Now<Nude_X->wki_min)?Nude_X->wki_min:Nude_X->wki_Now);
   \   000001C2   0x6B70             LDR      R0,[R6, #+52]
   \   000001C4   0x69F1             LDR      R1,[R6, #+28]
   \   000001C6   0x.... 0x....      BL       __aeabi_cfcmple
   \   000001CA   0xD201             BCS.N    ??Heb_learning_Function_7
   \   000001CC   0x69F0             LDR      R0,[R6, #+28]
   \   000001CE   0xE000             B.N      ??Heb_learning_Function_8
   \                     ??Heb_learning_Function_7: (+1)
   \   000001D0   0x6B70             LDR      R0,[R6, #+52]
   \                     ??Heb_learning_Function_8: (+1)
   \   000001D2   0x6370             STR      R0,[R6, #+52]
    157            Nude_X->wkd_Now=((Nude_X->wkd_Now<Nude_X->wkd_min)?Nude_X->wkd_min:Nude_X->wkd_Now);
   \   000001D4   0x6BB0             LDR      R0,[R6, #+56]
   \   000001D6   0x6A31             LDR      R1,[R6, #+32]
   \   000001D8   0x.... 0x....      BL       __aeabi_cfcmple
   \   000001DC   0xD201             BCS.N    ??Heb_learning_Function_9
   \   000001DE   0x6A30             LDR      R0,[R6, #+32]
   \   000001E0   0xE000             B.N      ??Heb_learning_Function_10
   \                     ??Heb_learning_Function_9: (+1)
   \   000001E2   0x6BB0             LDR      R0,[R6, #+56]
   \                     ??Heb_learning_Function_10: (+1)
   \   000001E4   0x63B0             STR      R0,[R6, #+56]
    158            
    159            Nude_X->X.P_Cacul_Param=error_Now-Nude_X->error_1;    //%P
   \   000001E6   0x0038             MOVS     R0,R7
   \   000001E8   0x6BF1             LDR      R1,[R6, #+60]
   \   000001EA   0x.... 0x....      BL       __aeabi_fsub
   \   000001EE   0x6030             STR      R0,[R6, #+0]
    160            Nude_X->X.I_Cacul_Param=error_Now;            //%I
   \   000001F0   0x6077             STR      R7,[R6, #+4]
    161            Nude_X->X.D_Cacul_Param=error_Now-2*Nude_X->error_1+Nude_X->error_2; //%D
   \   000001F2   0x6BF1             LDR      R1,[R6, #+60]
   \   000001F4   0xF05F 0x4080      MOVS     R0,#+1073741824
   \   000001F8   0x.... 0x....      BL       __aeabi_fmul
   \   000001FC   0x0001             MOVS     R1,R0
   \   000001FE   0x0038             MOVS     R0,R7
   \   00000200   0x.... 0x....      BL       __aeabi_fsub
   \   00000204   0x6C31             LDR      R1,[R6, #+64]
   \   00000206   0x.... 0x....      BL       __aeabi_fadd
   \   0000020A   0x60B0             STR      R0,[R6, #+8]
    162          
    163            wadd=fabs(Nude_X->wkp_Now)+fabs(Nude_X->wki_Now)+fabs(Nude_X->wkd_Now);
   \   0000020C   0x6B30             LDR      R0,[R6, #+48]
   \   0000020E   0x.... 0x....      BL       __aeabi_f2d
   \   00000212   0x0004             MOVS     R4,R0
   \   00000214   0x000D             MOVS     R5,R1
   \   00000216   0xF035 0x4500      BICS     R5,R5,#0x80000000
   \   0000021A   0x6B70             LDR      R0,[R6, #+52]
   \   0000021C   0x.... 0x....      BL       __aeabi_f2d
   \   00000220   0xF031 0x4100      BICS     R1,R1,#0x80000000
   \   00000224   0x0022             MOVS     R2,R4
   \   00000226   0x002B             MOVS     R3,R5
   \   00000228   0x.... 0x....      BL       __aeabi_dadd
   \   0000022C   0x0004             MOVS     R4,R0
   \   0000022E   0x000D             MOVS     R5,R1
   \   00000230   0x6BB0             LDR      R0,[R6, #+56]
   \   00000232   0x.... 0x....      BL       __aeabi_f2d
   \   00000236   0xF031 0x4100      BICS     R1,R1,#0x80000000
   \   0000023A   0x0022             MOVS     R2,R4
   \   0000023C   0x002B             MOVS     R3,R5
   \   0000023E   0x.... 0x....      BL       __aeabi_dadd
   \   00000242   0x.... 0x....      BL       __aeabi_d2f
   \   00000246   0x4683             MOV      R11,R0
    164            w11=Nude_X->wkp_Now/wadd;
   \   00000248   0x6B30             LDR      R0,[R6, #+48]
   \   0000024A   0x4659             MOV      R1,R11
   \   0000024C   0x.... 0x....      BL       __aeabi_fdiv
   \   00000250   0x4681             MOV      R9,R0
    165            w22=Nude_X->wki_Now/wadd;
   \   00000252   0x6B70             LDR      R0,[R6, #+52]
   \   00000254   0x4659             MOV      R1,R11
   \   00000256   0x.... 0x....      BL       __aeabi_fdiv
   \   0000025A   0x4682             MOV      R10,R0
    166            w33=Nude_X->wkd_Now/wadd;
   \   0000025C   0x6BB0             LDR      R0,[R6, #+56]
   \   0000025E   0x4659             MOV      R1,R11
   \   00000260   0x.... 0x....      BL       __aeabi_fdiv
   \   00000264   0x4683             MOV      R11,R0
    167            
    168            
    169            u_Now=Nude_X->u_1+K*(w11*Nude_X->X.P_Cacul_Param+w22*Nude_X->X.I_Cacul_Param+w33*Nude_X->X.D_Cacul_Param);   //%Control law
   \   00000266   0x6830             LDR      R0,[R6, #+0]
   \   00000268   0x4649             MOV      R1,R9
   \   0000026A   0x.... 0x....      BL       __aeabi_fmul
   \   0000026E   0x0004             MOVS     R4,R0
   \   00000270   0x6870             LDR      R0,[R6, #+4]
   \   00000272   0x4651             MOV      R1,R10
   \   00000274   0x.... 0x....      BL       __aeabi_fmul
   \   00000278   0x0021             MOVS     R1,R4
   \   0000027A   0x.... 0x....      BL       __aeabi_fadd
   \   0000027E   0x0004             MOVS     R4,R0
   \   00000280   0x68B0             LDR      R0,[R6, #+8]
   \   00000282   0x4659             MOV      R1,R11
   \   00000284   0x.... 0x....      BL       __aeabi_fmul
   \   00000288   0x0021             MOVS     R1,R4
   \   0000028A   0x.... 0x....      BL       __aeabi_fadd
   \   0000028E   0x4641             MOV      R1,R8
   \   00000290   0x.... 0x....      BL       __aeabi_fmul
   \   00000294   0x6C71             LDR      R1,[R6, #+68]
   \   00000296   0x.... 0x....      BL       __aeabi_fadd
    170            
    171            if (u_Now>9000)
   \   0000029A   0x490B             LDR.N    R1,??Heb_learning_Function_11  ;; 0x460ca001
   \   0000029C   0x.... 0x....      BL       __aeabi_cfrcmple
   \   000002A0   0xD801             BHI.N    ??Heb_learning_Function_12
    172            {
    173              u_Now=9000;
   \   000002A2   0x480A             LDR.N    R0,??Heb_learning_Function_11+0x4  ;; 0x460ca000
   \   000002A4   0xE004             B.N      ??Heb_learning_Function_13
    174            }
    175            else if (u_Now<-9000)
   \                     ??Heb_learning_Function_12: (+1)
   \   000002A6   0x490A             LDR.N    R1,??Heb_learning_Function_11+0x8  ;; 0xc60ca000
   \   000002A8   0x.... 0x....      BL       __aeabi_cfcmple
   \   000002AC   0xD200             BCS.N    ??Heb_learning_Function_13
    176            {
    177              u_Now=-9000;
   \   000002AE   0x4808             LDR.N    R0,??Heb_learning_Function_11+0x8  ;; 0xc60ca000
    178            }
    179            
    180            Nude_X->error_2=Nude_X->error_1;
   \                     ??Heb_learning_Function_13: (+1)
   \   000002B0   0x6BF1             LDR      R1,[R6, #+60]
   \   000002B2   0x6431             STR      R1,[R6, #+64]
    181            Nude_X->error_1=error_Now;
   \   000002B4   0x63F7             STR      R7,[R6, #+60]
    182            
    183            Nude_X->u_1=u_Now;
   \   000002B6   0x6470             STR      R0,[R6, #+68]
    184            
    185            Nude_X->wkp_1=Nude_X->wkp_Now;
   \   000002B8   0x6B31             LDR      R1,[R6, #+48]
   \   000002BA   0x6271             STR      R1,[R6, #+36]
    186            Nude_X->wki_1=Nude_X->wki_Now;
   \   000002BC   0x6B71             LDR      R1,[R6, #+52]
   \   000002BE   0x62B1             STR      R1,[R6, #+40]
    187            Nude_X->wkd_1=Nude_X->wkd_Now;
   \   000002C0   0x6BB1             LDR      R1,[R6, #+56]
   \   000002C2   0x62F1             STR      R1,[R6, #+44]
    188            
    189            return u_Now;
   \   000002C4   0xE8BD 0x8FF2      POP      {R1,R4-R11,PC}   ;; return
   \                     ??Heb_learning_Function_11:
   \   000002C8   0x460CA001         DC32     0x460ca001
   \   000002CC   0x460CA000         DC32     0x460ca000
   \   000002D0   0xC60CA000         DC32     0xc60ca000
    190          }
    191          
    192          

   Maximum stack usage in bytes:

   .cstack Function
   ------- --------
      40   Heb_learning_Function
        40   -> __aeabi_d2f
        40   -> __aeabi_dadd
        40   -> __aeabi_f2d
        40   -> __aeabi_fadd
        40   -> __aeabi_fdiv
        40   -> __aeabi_fmul
        40   -> __aeabi_fsub
        40 __aeabi_cfcmple
        40 __aeabi_cfrcmple


   Section sizes:

   Bytes  Function/Label
   -----  --------------
     724  Heb_learning_Function
      72  Left_Mortor
      72  Right_Mortor
      72  Speed_Struct

 
 216 bytes in section .data
 724 bytes in section .text
 
 724 bytes of CODE memory
 216 bytes of DATA memory

Errors: none
Warnings: 3
